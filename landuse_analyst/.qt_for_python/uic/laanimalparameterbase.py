# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '/Users/arkygeek/dev/QGisPlugins/landuseanalyst/landuse_analyst/src/ui/laanimalparameterbase.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_LaAnimalParameterManagerBase(object):
    def setupUi(self, LaAnimalParameterManagerBase):
        LaAnimalParameterManagerBase.setObjectName("LaAnimalParameterManagerBase")
        LaAnimalParameterManagerBase.resize(513, 366)
        LaAnimalParameterManagerBase.setMinimumSize(QtCore.QSize(0, 0))
        self.gridlayout = QtWidgets.QGridLayout(LaAnimalParameterManagerBase)
        self.gridlayout.setContentsMargins(9, 9, 9, 9)
        self.gridlayout.setSpacing(6)
        self.gridlayout.setObjectName("gridlayout")
        self.groupBoxFodderUse = QtWidgets.QGroupBox(LaAnimalParameterManagerBase)
        self.groupBoxFodderUse.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.groupBoxFodderUse.setCheckable(True)
        self.groupBoxFodderUse.setChecked(False)
        self.groupBoxFodderUse.setObjectName("groupBoxFodderUse")
        self.gridlayout1 = QtWidgets.QGridLayout(self.groupBoxFodderUse)
        self.gridlayout1.setContentsMargins(2, 2, 2, 2)
        self.gridlayout1.setSpacing(0)
        self.gridlayout1.setObjectName("gridlayout1")
        self.labelFodderFodder = QtWidgets.QLabel(self.groupBoxFodderUse)
        self.labelFodderFodder.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.labelFodderFodder.setAlignment(QtCore.Qt.AlignCenter)
        self.labelFodderFodder.setObjectName("labelFodderFodder")
        self.gridlayout1.addWidget(self.labelFodderFodder, 0, 1, 1, 2)
        self.labelFodderGrain = QtWidgets.QLabel(self.groupBoxFodderUse)
        self.labelFodderGrain.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.labelFodderGrain.setAlignment(QtCore.Qt.AlignCenter)
        self.labelFodderGrain.setObjectName("labelFodderGrain")
        self.gridlayout1.addWidget(self.labelFodderGrain, 0, 3, 1, 1)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridlayout1.addItem(spacerItem, 0, 0, 1, 1)
        self.sbFodderLentilsGrain = QtWidgets.QSpinBox(self.groupBoxFodderUse)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.sbFodderLentilsGrain.sizePolicy().hasHeightForWidth())
        self.sbFodderLentilsGrain.setSizePolicy(sizePolicy)
        self.sbFodderLentilsGrain.setMaximum(100)
        self.sbFodderLentilsGrain.setObjectName("sbFodderLentilsGrain")
        self.gridlayout1.addWidget(self.sbFodderLentilsGrain, 3, 3, 1, 1)
        self.sbFodderLentils = QtWidgets.QSpinBox(self.groupBoxFodderUse)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.sbFodderLentils.sizePolicy().hasHeightForWidth())
        self.sbFodderLentils.setSizePolicy(sizePolicy)
        self.sbFodderLentils.setMinimum(-3)
        self.sbFodderLentils.setMaximum(100)
        self.sbFodderLentils.setObjectName("sbFodderLentils")
        self.gridlayout1.addWidget(self.sbFodderLentils, 3, 2, 1, 1)
        self.labelFodderLentils = QtWidgets.QLabel(self.groupBoxFodderUse)
        self.labelFodderLentils.setObjectName("labelFodderLentils")
        self.gridlayout1.addWidget(self.labelFodderLentils, 3, 0, 1, 2)
        self.sbFodderBarleyGrain = QtWidgets.QSpinBox(self.groupBoxFodderUse)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.sbFodderBarleyGrain.sizePolicy().hasHeightForWidth())
        self.sbFodderBarleyGrain.setSizePolicy(sizePolicy)
        self.sbFodderBarleyGrain.setMaximum(100)
        self.sbFodderBarleyGrain.setObjectName("sbFodderBarleyGrain")
        self.gridlayout1.addWidget(self.sbFodderBarleyGrain, 2, 3, 1, 1)
        self.sbFodderBarley = QtWidgets.QSpinBox(self.groupBoxFodderUse)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.sbFodderBarley.sizePolicy().hasHeightForWidth())
        self.sbFodderBarley.setSizePolicy(sizePolicy)
        self.sbFodderBarley.setMinimum(-3)
        self.sbFodderBarley.setMaximum(100)
        self.sbFodderBarley.setObjectName("sbFodderBarley")
        self.gridlayout1.addWidget(self.sbFodderBarley, 2, 2, 1, 1)
        self.labelFodderBarley = QtWidgets.QLabel(self.groupBoxFodderUse)
        self.labelFodderBarley.setObjectName("labelFodderBarley")
        self.gridlayout1.addWidget(self.labelFodderBarley, 2, 0, 1, 2)
        self.sbFodderWheatGrain = QtWidgets.QSpinBox(self.groupBoxFodderUse)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.sbFodderWheatGrain.sizePolicy().hasHeightForWidth())
        self.sbFodderWheatGrain.setSizePolicy(sizePolicy)
        self.sbFodderWheatGrain.setMaximum(100)
        self.sbFodderWheatGrain.setObjectName("sbFodderWheatGrain")
        self.gridlayout1.addWidget(self.sbFodderWheatGrain, 1, 3, 1, 1)
        self.sbFodderWheat = QtWidgets.QSpinBox(self.groupBoxFodderUse)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.sbFodderWheat.sizePolicy().hasHeightForWidth())
        self.sbFodderWheat.setSizePolicy(sizePolicy)
        self.sbFodderWheat.setMinimum(-3)
        self.sbFodderWheat.setMaximum(100)
        self.sbFodderWheat.setObjectName("sbFodderWheat")
        self.gridlayout1.addWidget(self.sbFodderWheat, 1, 2, 1, 1)
        self.labelFodderWheat = QtWidgets.QLabel(self.groupBoxFodderUse)
        self.labelFodderWheat.setObjectName("labelFodderWheat")
        self.gridlayout1.addWidget(self.labelFodderWheat, 1, 0, 1, 2)
        self.gridlayout.addWidget(self.groupBoxFodderUse, 1, 2, 5, 3)
        self.cbFallowUsage = QtWidgets.QComboBox(LaAnimalParameterManagerBase)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.cbFallowUsage.sizePolicy().hasHeightForWidth())
        self.cbFallowUsage.setSizePolicy(sizePolicy)
        self.cbFallowUsage.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.cbFallowUsage.setObjectName("cbFallowUsage")
        self.cbFallowUsage.addItem("")
        self.cbFallowUsage.addItem("")
        self.cbFallowUsage.addItem("")
        self.cbFallowUsage.addItem("")
        self.gridlayout.addWidget(self.cbFallowUsage, 5, 0, 1, 2)
        self.sbUniqueRasterCalories = QtWidgets.QSpinBox(LaAnimalParameterManagerBase)
        self.sbUniqueRasterCalories.setMaximum(99999999)
        self.sbUniqueRasterCalories.setSingleStep(100)
        self.sbUniqueRasterCalories.setProperty("value", 10000)
        self.sbUniqueRasterCalories.setObjectName("sbUniqueRasterCalories")
        self.gridlayout.addWidget(self.sbUniqueRasterCalories, 2, 1, 1, 1)
        self.cbGrazingUnits = QtWidgets.QComboBox(LaAnimalParameterManagerBase)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.cbGrazingUnits.sizePolicy().hasHeightForWidth())
        self.cbGrazingUnits.setSizePolicy(sizePolicy)
        self.cbGrazingUnits.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.cbGrazingUnits.setObjectName("cbGrazingUnits")
        self.cbGrazingUnits.addItem("")
        self.cbGrazingUnits.addItem("")
        self.gridlayout.addWidget(self.cbGrazingUnits, 4, 0, 1, 2)
        self.sbCommonRasterCalories = QtWidgets.QSpinBox(LaAnimalParameterManagerBase)
        self.sbCommonRasterCalories.setMaximum(99999999)
        self.sbCommonRasterCalories.setSingleStep(100)
        self.sbCommonRasterCalories.setProperty("value", 10000)
        self.sbCommonRasterCalories.setObjectName("sbCommonRasterCalories")
        self.gridlayout.addWidget(self.sbCommonRasterCalories, 3, 1, 1, 1)
        self.checkBoxCommonRaster = QtWidgets.QCheckBox(LaAnimalParameterManagerBase)
        self.checkBoxCommonRaster.setObjectName("checkBoxCommonRaster")
        self.gridlayout.addWidget(self.checkBoxCommonRaster, 3, 0, 1, 1)
        self.checkBoxUniqueRaster = QtWidgets.QCheckBox(LaAnimalParameterManagerBase)
        self.checkBoxUniqueRaster.setObjectName("checkBoxUniqueRaster")
        self.gridlayout.addWidget(self.checkBoxUniqueRaster, 2, 0, 1, 1)
        self.sbPercentOfTameMeat = QtWidgets.QSpinBox(LaAnimalParameterManagerBase)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.sbPercentOfTameMeat.sizePolicy().hasHeightForWidth())
        self.sbPercentOfTameMeat.setSizePolicy(sizePolicy)
        self.sbPercentOfTameMeat.setMaximum(100)
        self.sbPercentOfTameMeat.setProperty("value", 50)
        self.sbPercentOfTameMeat.setObjectName("sbPercentOfTameMeat")
        self.gridlayout.addWidget(self.sbPercentOfTameMeat, 1, 1, 1, 1)
        self.labelPortionDiet = QtWidgets.QLabel(LaAnimalParameterManagerBase)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.labelPortionDiet.sizePolicy().hasHeightForWidth())
        self.labelPortionDiet.setSizePolicy(sizePolicy)
        self.labelPortionDiet.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.labelPortionDiet.setAlignment(QtCore.Qt.AlignBottom|QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft)
        self.labelPortionDiet.setObjectName("labelPortionDiet")
        self.gridlayout.addWidget(self.labelPortionDiet, 1, 0, 1, 1)
        self.pbnClose = QtWidgets.QPushButton(LaAnimalParameterManagerBase)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pbnClose.sizePolicy().hasHeightForWidth())
        self.pbnClose.setSizePolicy(sizePolicy)
        self.pbnClose.setObjectName("pbnClose")
        self.gridlayout.addWidget(self.pbnClose, 6, 4, 1, 1)
        self.pbnApply = QtWidgets.QPushButton(LaAnimalParameterManagerBase)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pbnApply.sizePolicy().hasHeightForWidth())
        self.pbnApply.setSizePolicy(sizePolicy)
        self.pbnApply.setObjectName("pbnApply")
        self.gridlayout.addWidget(self.pbnApply, 6, 3, 1, 1)
        spacerItem1 = QtWidgets.QSpacerItem(391, 27, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridlayout.addItem(spacerItem1, 6, 0, 1, 3)
        self.grpProfiles = QtWidgets.QGroupBox(LaAnimalParameterManagerBase)
        self.grpProfiles.setObjectName("grpProfiles")
        self.gridlayout2 = QtWidgets.QGridLayout(self.grpProfiles)
        self.gridlayout2.setContentsMargins(9, 9, 9, 9)
        self.gridlayout2.setSpacing(6)
        self.gridlayout2.setObjectName("gridlayout2")
        self.tblAnimalParameterProfiles = QtWidgets.QTableWidget(self.grpProfiles)
        self.tblAnimalParameterProfiles.setAlternatingRowColors(True)
        self.tblAnimalParameterProfiles.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.tblAnimalParameterProfiles.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.tblAnimalParameterProfiles.setObjectName("tblAnimalParameterProfiles")
        self.tblAnimalParameterProfiles.setColumnCount(2)
        self.tblAnimalParameterProfiles.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tblAnimalParameterProfiles.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tblAnimalParameterProfiles.setHorizontalHeaderItem(1, item)
        self.gridlayout2.addWidget(self.tblAnimalParameterProfiles, 0, 0, 1, 6)
        self.toolNew = QtWidgets.QToolButton(self.grpProfiles)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/new.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.toolNew.setIcon(icon)
        self.toolNew.setObjectName("toolNew")
        self.gridlayout2.addWidget(self.toolNew, 1, 3, 1, 1)
        self.toolCopy = QtWidgets.QToolButton(self.grpProfiles)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/copy.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.toolCopy.setIcon(icon1)
        self.toolCopy.setObjectName("toolCopy")
        self.gridlayout2.addWidget(self.toolCopy, 1, 4, 1, 1)
        self.toolDelete = QtWidgets.QToolButton(self.grpProfiles)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/delete.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.toolDelete.setIcon(icon2)
        self.toolDelete.setObjectName("toolDelete")
        self.gridlayout2.addWidget(self.toolDelete, 1, 5, 1, 1)
        self.pbnImport = QtWidgets.QPushButton(self.grpProfiles)
        self.pbnImport.setMinimumSize(QtCore.QSize(80, 0))
        self.pbnImport.setObjectName("pbnImport")
        self.gridlayout2.addWidget(self.pbnImport, 1, 0, 1, 1)
        self.pbnExport = QtWidgets.QPushButton(self.grpProfiles)
        self.pbnExport.setMinimumSize(QtCore.QSize(80, 0))
        self.pbnExport.setObjectName("pbnExport")
        self.gridlayout2.addWidget(self.pbnExport, 1, 1, 1, 1)
        spacerItem2 = QtWidgets.QSpacerItem(71, 27, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridlayout2.addItem(spacerItem2, 1, 2, 1, 1)
        self.gridlayout.addWidget(self.grpProfiles, 0, 0, 1, 5)

        self.retranslateUi(LaAnimalParameterManagerBase)
        self.pbnClose.clicked.connect(LaAnimalParameterManagerBase.close) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(LaAnimalParameterManagerBase)

    def retranslateUi(self, LaAnimalParameterManagerBase):
        _translate = QtCore.QCoreApplication.translate
        LaAnimalParameterManagerBase.setWindowTitle(_translate("LaAnimalParameterManagerBase", "Animal Parameter Manager"))
        self.groupBoxFodderUse.setWhatsThis(_translate("LaAnimalParameterManagerBase", "Select Fodder if you believe the animals were fed grain to supplement their grazing.  You will then have to select how many kg of the selected grain you believe they fed each animal either every day, week, or month."))
        self.groupBoxFodderUse.setTitle(_translate("LaAnimalParameterManagerBase", "Fodder"))
        self.labelFodderFodder.setToolTip(_translate("LaAnimalParameterManagerBase", "<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Sans Serif\'; font-size:9pt; font-weight:400; font-style:normal; text-decoration:none;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Percent of animals diet provided by <span style=\" font-weight:600;\">FODDER</span>.</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" color:#0000ff;\">To use </span><span style=\" font-style:italic; color:#0000ff;\">all</span><span style=\" color:#0000ff;\"> that is available use a </span><span style=\" font-weight:600; color:#0000ff;\">negative number:</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600;\">-1</span> for HIGH priority total utilization</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600;\">-2</span> for MED priority total utilization</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600;\">-3</span> for LOW priority total utilization</p></body></html>"))
        self.labelFodderFodder.setText(_translate("LaAnimalParameterManagerBase", "Fodder"))
        self.labelFodderGrain.setText(_translate("LaAnimalParameterManagerBase", "Grain"))
        self.sbFodderLentilsGrain.setToolTip(_translate("LaAnimalParameterManagerBase", "<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Sans Serif\'; font-size:9pt; font-weight:400; font-style:normal; text-decoration:none;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Percent of animals diet provided by LENTILS</p></body></html>"))
        self.sbFodderLentilsGrain.setSuffix(_translate("LaAnimalParameterManagerBase", "%"))
        self.sbFodderLentils.setToolTip(_translate("LaAnimalParameterManagerBase", "<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Sans Serif\'; font-size:9pt; font-weight:400; font-style:normal; text-decoration:none;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Percent of animals diet provided by <span style=\" color:#0000ff;\">LENTIL FODDER</span>.</p></body></html>"))
        self.sbFodderLentils.setSuffix(_translate("LaAnimalParameterManagerBase", "%"))
        self.labelFodderLentils.setToolTip(_translate("LaAnimalParameterManagerBase", "<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Sans Serif\'; font-size:9pt; font-weight:400; font-style:normal; text-decoration:none;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Percent of animals diet provided by LENTILS</p></body></html>"))
        self.labelFodderLentils.setText(_translate("LaAnimalParameterManagerBase", "Lentils"))
        self.sbFodderBarleyGrain.setToolTip(_translate("LaAnimalParameterManagerBase", "<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Sans Serif\'; font-size:9pt; font-weight:400; font-style:normal; text-decoration:none;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Percent of animals diet provided by BARLEY</p></body></html>"))
        self.sbFodderBarleyGrain.setSuffix(_translate("LaAnimalParameterManagerBase", "%"))
        self.sbFodderBarley.setToolTip(_translate("LaAnimalParameterManagerBase", "<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Sans Serif\'; font-size:9pt; font-weight:400; font-style:normal; text-decoration:none;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Percent of animals diet provided by <span style=\" color:#0000ff;\">BARLEY FODDER</span></p></body></html>"))
        self.sbFodderBarley.setSuffix(_translate("LaAnimalParameterManagerBase", "%"))
        self.labelFodderBarley.setToolTip(_translate("LaAnimalParameterManagerBase", "<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Sans Serif\'; font-size:9pt; font-weight:400; font-style:normal; text-decoration:none;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Percent of animals diet provided by BARLEY</p></body></html>"))
        self.labelFodderBarley.setText(_translate("LaAnimalParameterManagerBase", "Barley"))
        self.sbFodderWheatGrain.setToolTip(_translate("LaAnimalParameterManagerBase", "<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Sans Serif\'; font-size:9pt; font-weight:400; font-style:normal; text-decoration:none;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Percent of animals diet provided by WHEAT</p></body></html>"))
        self.sbFodderWheatGrain.setSuffix(_translate("LaAnimalParameterManagerBase", "%"))
        self.sbFodderWheat.setToolTip(_translate("LaAnimalParameterManagerBase", "<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Sans Serif\'; font-size:9pt; font-weight:400; font-style:normal; text-decoration:none;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Percent of animals diet provided by <span style=\" color:#0000ff;\">WHEAT FODDER.</span></p></body></html>"))
        self.sbFodderWheat.setSuffix(_translate("LaAnimalParameterManagerBase", "%"))
        self.labelFodderWheat.setToolTip(_translate("LaAnimalParameterManagerBase", "<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Sans Serif\'; font-size:9pt; font-weight:400; font-style:normal; text-decoration:none;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Percent of animals diet provided by WHEAT</p></body></html>"))
        self.labelFodderWheat.setText(_translate("LaAnimalParameterManagerBase", "Wheat"))
        self.cbFallowUsage.setToolTip(_translate("LaAnimalParameterManagerBase", "<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Sans Serif\'; font-size:9pt; font-weight:400; font-style:normal; text-decoration:none;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">If your animal is to be allowed to graze fallow land resulting from crop rotation, set the priority of their access to this fallow land here.</p></body></html>"))
        self.cbFallowUsage.setItemText(0, _translate("LaAnimalParameterManagerBase", "Do Not Graze Fallow"))
        self.cbFallowUsage.setItemText(1, _translate("LaAnimalParameterManagerBase", "HIGH Fallow Priority"))
        self.cbFallowUsage.setItemText(2, _translate("LaAnimalParameterManagerBase", "MED Fallow Priority"))
        self.cbFallowUsage.setItemText(3, _translate("LaAnimalParameterManagerBase", "LOW Fallow Priority"))
        self.sbUniqueRasterCalories.setSuffix(_translate("LaAnimalParameterManagerBase", " KCal"))
        self.cbGrazingUnits.setToolTip(_translate("LaAnimalParameterManagerBase", "<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Sans Serif\'; font-size:9pt; font-weight:400; font-style:normal; text-decoration:none;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">1 dunum = 1000 square meters</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">1 hectare = 10,000 square meters</p></body></html>"))
        self.cbGrazingUnits.setItemText(0, _translate("LaAnimalParameterManagerBase", "* KCal per Dunum per Year"))
        self.cbGrazingUnits.setItemText(1, _translate("LaAnimalParameterManagerBase", "* KCal per Hectare per Year"))
        self.sbCommonRasterCalories.setSuffix(_translate("LaAnimalParameterManagerBase", " KCal"))
        self.checkBoxCommonRaster.setToolTip(_translate("LaAnimalParameterManagerBase", "<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Sans Serif\'; font-size:9pt; font-weight:400; font-style:normal; text-decoration:none;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">binary raster named common.grazing.mask which more than one animal can graze from</p></body></html>"))
        self.checkBoxCommonRaster.setText(_translate("LaAnimalParameterManagerBase", "Common Grazing Land"))
        self.checkBoxUniqueRaster.setToolTip(_translate("LaAnimalParameterManagerBase", "<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Sans Serif\'; font-size:9pt; font-weight:400; font-style:normal; text-decoration:none;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">binary raster named: animalName.mask  where animalName is the name of the animal you are setting these parameters for.</p></body></html>"))
        self.checkBoxUniqueRaster.setText(_translate("LaAnimalParameterManagerBase", "Specific Grazing Land"))
        self.sbPercentOfTameMeat.setToolTip(_translate("LaAnimalParameterManagerBase", "<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Sans Serif\'; font-size:9pt; font-weight:400; font-style:normal; text-decoration:none;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">This animal contiributes this percent towards the tame meat portion of the diet</p></body></html>"))
        self.sbPercentOfTameMeat.setSuffix(_translate("LaAnimalParameterManagerBase", " %"))
        self.labelPortionDiet.setText(_translate("LaAnimalParameterManagerBase", "Portion of Tame Meat Diet"))
        self.pbnClose.setText(_translate("LaAnimalParameterManagerBase", "Close"))
        self.pbnApply.setText(_translate("LaAnimalParameterManagerBase", "Apply"))
        self.grpProfiles.setTitle(_translate("LaAnimalParameterManagerBase", "Available Animal Parameter Settings"))
        self.tblAnimalParameterProfiles.setWhatsThis(_translate("LaAnimalParameterManagerBase", "Table of the currently available layersets"))
        item = self.tblAnimalParameterProfiles.horizontalHeaderItem(0)
        item.setText(_translate("LaAnimalParameterManagerBase", "FileName"))
        item = self.tblAnimalParameterProfiles.horizontalHeaderItem(1)
        item.setText(_translate("LaAnimalParameterManagerBase", "Name"))
        self.toolNew.setToolTip(_translate("LaAnimalParameterManagerBase", "New"))
        self.toolNew.setText(_translate("LaAnimalParameterManagerBase", "..."))
        self.toolCopy.setToolTip(_translate("LaAnimalParameterManagerBase", "Clone"))
        self.toolCopy.setText(_translate("LaAnimalParameterManagerBase", "..."))
        self.toolDelete.setToolTip(_translate("LaAnimalParameterManagerBase", "Delete"))
        self.toolDelete.setText(_translate("LaAnimalParameterManagerBase", "..."))
        self.pbnImport.setText(_translate("LaAnimalParameterManagerBase", "Import"))
        self.pbnExport.setText(_translate("LaAnimalParameterManagerBase", "Export"))
