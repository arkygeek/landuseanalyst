from PyQt5.QtCore import Qt, QSettings, QTranslator, QCoreApplication
from PyQt5.QtGui import QIcon
from PyQt5.QtWidgets import QAction, QMainWindow, QFileDialog, QMessageBox

from la.ui.lamainformbase import LaMainFormBase
from la.lib.lacropmanager import LaCropManager


class LaMainForm(QMainWindow, LaMainFormBase):
    def __init__(self, parent=None):
        super().__init__(parent)
        self.setupUi(self)

        # Initialize the crop manager
        self.cropManager = LaCropManager(self)

        # Set up the menu actions
        self.actionNew.triggered.connect(self.newFile)
        self.actionOpen.triggered.connect(self.openFile)
        self.actionSave.triggered.connect(self.saveFile)
        self.actionSaveAs.triggered.connect(self.saveFileAs)
        self.actionPreferences.triggered.connect(self.showPreferences)
        self.actionAbout.triggered.connect(self.showAbout)

        # Set up the toolbar actions
        self.actionNewToolbar.triggered.connect(self.newFile)
        self.actionOpenToolbar.triggered.connect(self.openFile)
        self.actionSaveToolbar.triggered.connect(self.saveFile)

        # Set up the status bar
        self.statusBar().showMessage("Ready")

        # Set up the window icon
        self.setWindowIcon(QIcon(":/icons/landuseanalyst.png"))

        # Set up the settings
        self.settings = QSettings("Linfiniti", "LandUseAnalyst")
        self.loadSettings()

    def newFile(self):
        # TODO: Implement new file functionality
        pass

    def openFile(self):
        # TODO: Implement open file functionality
        pass

    def saveFile(self):
        # TODO: Implement save file functionality
        pass

    def saveFileAs(self):
        # TODO: Implement save file as functionality
        pass

    def showPreferences(self):
        preferences = LaPreferences(self)
        preferences.exec_()
        self.loadSettings()

    def showAbout(self):
        about = LaAbout(self)
        about.exec_()

    def closeEvent(self, event):
        # Save the settings
        self.saveSettings()

        # Confirm exit
        reply = QMessageBox.question(self, "Exit", "Are you sure you want to exit?",
                                      QMessageBox.Yes | QMessageBox.No, QMessageBox.No)
        if reply == QMessageBox.Yes:
            event.accept()
        else:
            event.ignore()

    def loadSettings(self):
        # Load the language settings
        language = self.settings.value("language", "en")
        translator = QTranslator()
        translator.load(f":/translations/landuseanalyst_{language}.qm")
        QCoreApplication.installTranslator(translator)

    def saveSettings(self):
        # Save the language settings
        language = QCoreApplication.translate("LaMainForm", "English")
        if QCoreApplication.translate("LaMainForm", "French") in self.languageComboBox.currentText():
            language = "fr"
        self.settings.setValue("language", language)

"""

LaMainForm class is rewritten in Python using PyQt5.

The necessary imports are included, including QAction, QFileDialog, QMessageBox,
    QMainWindow, QSettings, QTranslator, QCoreApplication, QIcon, and the
    Ui_LaMainFormBase class generated by Qt Designer.

The LaMainForm class defines the necessary methods for managing the main form,
    including __init__, newFile, openFile, saveFile, saveFileAs, showPreferences,
    showAbout, closeEvent, loadSettings, and saveSettings.  These methods are
    used to manage the main form, including the menu actions, toolbar actions,
    status bar, window icon, settings, and language translations.

"""