from typing import Any, List, Optional
from qgis.PyQt.QtCore import QModelIndex, QAbstractTableModel
from qgis.PyQt.QtGui import QBrush, QPixmap
from qgis.PyQt.QtWidgets import QLabel
from la.lib.lacrop import LaCrop

class LaCropTableModel(QAbstractTableModel):
    lblCropPix: QLabel
    mImageFile: Optional[str]
    crops: List[LaCrop]

    def __init__(self, parent: Optional[Any] = None) -> None: ...
    def rowCount(self, parent: QModelIndex = QModelIndex()) -> int: ...
    def columnCount(self, parent: QModelIndex = QModelIndex()) -> int: ...
    def data(self, index: QModelIndex, role: int) -> Any: ...
    def headerData(self, section: int, orientation: int, role: int) -> Any: ...
    def addCrop(self, crop: LaCrop) -> None: ...
    def removeCrop(self, index: int) -> None: ...
    def getCrop(self, index: int) -> LaCrop: ...

class LaCropManager:
    crops: List[LaCrop]
    parent: Optional[Any]

    def __init__(self, parent: Optional[Any] = None) -> None: ...
    def addCrop(self, name: str, description: str) -> None: ...
    def removeCrop(self, index: int) -> None: ...
    def getCrop(self, index: int) -> LaCrop: ...
    def getCropCount(self) -> int: ...
    def getCropTableModel(self) -> LaCropTableModel: ...
    def on_pbnCropPic_clicked(self) -> None: ...